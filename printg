int handle_c(va_list args, int *count)
{
	char ch = (char)va_arg(args, int);
	if (ch == '\0')
	{
		*count += _putchar('\\');
		*count += _putchar('0');
	}
	else
	{
		*count += _putchar(ch);
	}
	return 0;
}

int handle_s(va_list args, int *count)
{
	char *str = va_arg(args, char *);
	str = (str == NULL) ? "(null)" : str;
	*count += _puts(str);
	return 0;
}

int handle_percent(int *count)
{
	*count += _putchar('%');
	return 0;
}

int handle_d_i(va_list args, int *count)
{
	int num = va_arg(args, int);
	char buffer[BUFFER_SIZE];
	int length = snprintf(buffer, BUFFER_SIZE, "%d", num);
	*count += (_puts(buffer) + length);
	return 0;
}

int _printf(const char *format, ...)
{
	va_list args;
	int count = 0;
	int i;

	if (format == NULL)
		return (-1);

	va_start(args, format);
	for (i = 0; format[i] != '\0'; i++)
	{
		if (format[i] != '%')
		{
			count += _putchar(format[i]);
		}
		else
		{
			i++;
			if (format[i] == '\0')
				return (-1);

			switch (format[i])
			{
				case 'c':
					handle_c(args, &count);
					break;
				case 's':
					handle_s(args, &count);
					break;
				case '%':
					handle_percent(&count);
					break;
				case 'd':
				case 'i':
					handle_d_i(args, &count);
					break;
				default:
					count += (_putchar('%') + _putchar(format[i]));
					break;
			}
		}
	}
	va_end(args);
	return count;
}

